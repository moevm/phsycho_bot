version: "3"


services:
  db:
    container_name: "mongo-db"
    image: mongo:6.0
    restart: unless-stopped
    env_file: .env
    volumes:
      - db-data:/data/db/
    ports:
      - "127.0.0.1:27018:27017"

  bot:
    container_name: "bot"
    build:
      context: .
      dockerfile: Dockerfile
    image: bot
    restart: unless-stopped
    env_file: .env
    depends_on:
      - db
      - kafka

  silero-tts-service:
    image: "navatusein/silero-tts-service:1.0.0"
    container_name: "silero-tts-service"
    restart: unless-stopped
    env_file: .env
    deploy:
      resources:
        limits:
          memory: 2G

  whisper-asr-webservice:
    image: "onerahmet/openai-whisper-asr-webservice:v1.2.0"
    container_name: "whisper-asr-webservice"
    restart: unless-stopped
    env_file: .env

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: "wurstmeister/kafka:2.13-2.8.1"
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "stt:1:1,tts:1:1"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

volumes:
  db-data:
